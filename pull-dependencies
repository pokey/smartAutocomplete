#!/usr/bin/ruby

def matches(path)
  ARGV.size == 0 || ARGV.any? { |pattern| path =~ /#{pattern}/ }
end

# Copy or link |sourcePath| into lib/|dir|.
def pull(sourcePath, dir=nil, opts={})
  return unless matches(sourcePath)
  puts sourcePath
  destDir = opts[:libDir] ? opts[:libDir] : "lib"
  destDir += '/' + dir if dir
  system "mkdir -p #{destDir}"

  name = File.basename(sourcePath)
  if File.exists?(sourcePath)
    if opts[:symlink]
      system "ln -sf #{File.expand_path(sourcePath)} #{destDir}" or exit 1
    else
      system "rsync -arzLi #{sourcePath} #{destDir}" or exit 1
    end
  else
   system "rsync -arzLi jamie.stanford.edu:#{sourcePath} #{destDir}" or exit 1
  end
end

# sourcePath: path to master git repository
def updateGit(sourcePath, baseDir='.')
  destDir = baseDir + '/' + File.basename(sourcePath.sub(/\.git$/, ''))
  if File.exists?(destDir)
    system 'cd ' + destDir + ' && git pull' or exit 1
  else
    system 'mkdir -p ' + baseDir + ' && cd ' + baseDir + ' && git clone ' + sourcePath or exit 1
  end
end

############################################################
# For the paper

# References
# updateGit('jamie.stanford.edu:/user/psl/git/refdb.git')
# system 'make -C refdb' or exit 1

# For making figures
updateGit('https://github.com/percyliang/sfig')

############################################################

# Fig
updateGit('https://github.com/percyliang/fig')
system 'make -C fig' or exit 1
pull('fig/fig.jar', nil, {:symlink => true})
pull('fig/external/servlet-api.jar', nil, {:symlink => true})

# Libraries
pull("/u/nlp/data/smart-autocomplete/resources/guava-15.0.jar")
updateGit('https://github.com/requirejs/text.git', './webapp/scripts/lib')

# Gson
system 'cd lib && ' +
       'curl -O https://google-gson.googlecode.com/files/google-gson-2.2.4-release.zip && ' +
       'unzip -o google-gson-2.2.4-release.zip && ' +
       'ln -sf google-gson-2.2.4/gson-2.2.4.jar gson-2.2.4.jar' or exit 1

# SnakeYaml
system 'cd lib && ' +
       'curl -O https://snakeyaml.googlecode.com/files/SnakeYAML-all-1.11.zip && ' +
       'unzip -o SnakeYAML-all-1.11.zip && ' +
       'ln -sf snakeyaml/target/snakeyaml-1.11.jar snakeyaml-1.11.jar' or exit 1

# BerkeleyLM
system 'cd lib && ' +
       'curl -O https://berkeleylm.googlecode.com/files/berkeleylm-1.1.5.tar.gz && ' +
       'tar -xzf berkeleylm-1.1.5.tar.gz && ' +
       'cd berkeleylm-1.1.5 && ant && cd .. && ' +
       'ln -sf berkeleylm-1.1.5/jar/berkeleylm.jar berkeleylm.jar' or exit 1

# Unnecessary libraries
# FixMe: [usability] Have command-line switches to pull for these
if false
   # Srilm
   pull("/u/nlp/data/smart-autocomplete/resources/srilm.tgz")
   system 'mkdir -p lib/srilm' or exit 1
   system 'tar -xzf lib/srilm.tgz -C lib/srilm' or exit 1
   system "sed -i \"s_^# SRILM = .*\\$_SRILM = #{Dir.pwd}/lib/srilm_\" lib/srilm/Makefile" or exit 1
   system 'make -C lib/srilm World' or exit 1

   # Datasets
   pull('/u/nlp/data/smart-autocomplete/datasets/core-boto', 'datasets')
   pull('/u/nlp/data/smart-autocomplete/datasets/core-log4j', 'datasets')
   pull('/u/nlp/data/smart-autocomplete/datasets/core-tomcat', 'datasets')

   pull('/scr/pokey/smartAutocomplete/datasets/core-storm', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-elasticsearch', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-ActionBarSherlock', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-SlidingMenu', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-Android-Universal-Image-Loader', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-android', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-libgdx', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-Android-ViewPagerIndicator', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-android-async-http', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-spring-framework', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-django', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-requests', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-flask', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-httpie', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-tornado', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-ansible', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-reddit', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-Probabilistic-Programming-and-Bayesian-Methods-for-Hackers', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-python-guide', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-jquery', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-node', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-d3', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-angular.js', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-impress.js', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-backbone', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-moment', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-jQuery-File-Upload', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-brackets', 'datasets')
   pull('/scr/pokey/smartAutocomplete/datasets/core-reveal.js', 'datasets')

   pull('/u/nlp/data/smart-autocomplete/datasets/nanc-1m.txt', 'datasets')
   pull('/u/nlp/data/PTB3/treebank_3/parsed/mrg/wsj', 'datasets/wsj')

   # Tokenize wsj
   system 'scripts/preprocessWsj.sh' or exit 1
end
